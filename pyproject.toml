[tool.poetry]
name = "pyDataverse"
version = "0.3.2"
description = "A Python module for Dataverse."
authors = ["Stephan Kasberger <stefan.kasberger@univie.ac.at>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/gdcc/pyDataverse"
packages = [{ include = "pyDataverse", from = "src" }]

[tool.poetry.dependencies]
python = "^3.8.1"
httpx = "^0.27.0"
jsonschema = "^4.21.1"
urllib3 = "^2.2.1"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "^24.3.0"
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
flake8-blind-except = "^0.2.1"
flake8-builtins = "^2.5.0"
flake8-bandit = "^4.1.1"
flake8-breakpoint = "^1.1.0"
flake8-bugbear = "^24.2.6"
flake8-comprehensions = "^3.14.0"
flake8-requirements = "^2.1.1"
flake8-return = "^1.2.0"
flake8-pytest-style = "^2.0.0"
pylint = "^3.1.0"
radon = "^6.0.1"
mypy = "^1.9.0"
autopep8 = "^2.1.0"
pydocstyle = "^6.3.0"
pygments = "^2.17.2"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
tox = "^4.14.2"
selenium = "^4.19.0"
wheel = "^0.43.0"
pre-commit = "3.5.0"
sphinx = "7.1.2"
restructuredtext-lint = "^1.4.0"
rstcheck = "^6.2.1"


[tool.poetry.group.tests]
optional = true

[tool.poetry.group.tests.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
tox = "^4.14.2"
selenium = "^4.19.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
sphinx = "7.1.2"
pydocstyle = "^6.3.0"
restructuredtext-lint = "^1.4.0"
pygments = "^2.17.2"
rstcheck = "^6.2.1"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
black = "^24.3.0"
flake8 = "^7.0.0"
flake8-docstrings = "^1.7.0"
flake8-rst-docstrings = "^0.3.0"
flake8-blind-except = "^0.2.1"
flake8-builtins = "^2.5.0"
flake8-bandit = "^4.1.1"
flake8-breakpoint = "^1.1.0"
flake8-bugbear = "^24.2.6"
flake8-comprehensions = "^3.14.0"
flake8-requirements = "^2.1.1"
flake8-return = "^1.2.0"
flake8-pytest-style = "^2.0.0"
pylint = "^3.1.0"
radon = "^6.0.1"
mypy = "^1.9.0"
autopep8 = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = ["-v", "--cov=dvuploader"]

[tool.coverage.run]
source = "tests"

[tool.coverage.report]
show_missing = true

[tool.radon]
cc_min = "B"

[tool.flake8]
max-line-length = 88
ignore = ["E129", "E203", "E501", "W503", "S101"]
exclude = [".tox", ".egg", "conf.py", "conftest.py"]

[tool.pylint]
max-line-length = 88

[tool.pylama.pycodestyle]
max_line_length = 88

[tool.pylama.pylint]
max_line_length = 88
disable = "R"
